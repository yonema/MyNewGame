#pragma once
#include "Noncopyable.h"

namespace nsMyGame
{
	/**
	 * @brief プレイヤー関連のネームスペース
	*/
	namespace nsPlayer
	{
		// 前方宣言
		class CPlayer;			// プレイヤークラス

		/**
		 * @brief プレイヤーの動き関連のネームスペース
		*/
		namespace nsPlayerMovenent
		{
			// 前方宣言
			class CPlayerMovement;	// プレイヤーの動きクラス

			/**
			 * @brief プレイヤーの通常の動きクラス
			*/
			class CPlayerNormalMovement : private nsUtil::Noncopyable
			{
			public:		// コンストラクタとデストラクタ
				/**
				 * @brief コンストラクタ
				*/
				CPlayerNormalMovement() = default;
				/**
				 * @brief デストラクタ
				*/
				~CPlayerNormalMovement() = default;

			public:		// メンバ関数

				/**
				 * @brief 初期化
				 * @param[in] player プレイヤー
				 * @param[in,out] playerMovement プレイヤー移動クラスの参照
				*/
				void Init(
					const CPlayer& player,
					CPlayerMovement* playerMovement
				);

				/**
				 * @brief 通常の動きの処理を実行
				*/
				void Execute();

			private:	// privateなメンバ関数

				/**
				 * @brief 歩きか走りの移動の処理
				*/
				void WalkOrRunMove();

				/**
				 * @brief 糸を使ったアクションの後の空中の処理
				*/
				void AirAfterStringAction();

				/**
				 * @brief 軸入力値を更新
				*/
				void UpdateInputAxisParam();

				/**
				 * @brief 糸を使ったアクションの後の空中状態か調べる
				*/
				void CheckIsAirAfterStringAction();

				/**
				 * @brief 歩きか走りかを決める
				*/
				void WalkOrRun();

				/**
				 * @brief 移動方向を更新する
				*/
				void UpdateMoveDir();

				/**
				 * @brief 加速を計算
				*/
				void CalcAcceleration();

				/**
				 * @brief 摩擦の計算
				*/
				void CalcFriction();

				/**
				 * @brief 速度制限の計算
				*/
				void CalcLimitSpeed();

				/**
				 * @brief 実際に移動させる
				*/
				void Move();

			private:	// データメンバ
				CPlayerMovement* m_playerMovementRef = nullptr;	//!< 移動クラスの参照
				const CPlayer* m_playerRef = nullptr;			//!< プレイヤーの参照
				Vector3 m_moveDir = Vector3::Zero;				//!< 移動方向
				float m_velocity = 0.0f;						//!< スピード
				float m_oldVelocity = 0.0f;						//!< 前のフレームの速度

				// 軸入力値
				float m_inputMoveF = 0.0f;			//!< 前、後移動の軸入力値
				float m_inputMoveR = 0.0f;			//!< 右、左移動の軸入力値
				bool m_isInputMove = false;			//!< 軸入力があるか？

				// 通常の動きで変わるパラメータ
				float m_acceleration = 0.0f;	//!< 加速度
				float m_maxSpeed = 0.0f;		//!< 最高速度
			};

		}
	}
}